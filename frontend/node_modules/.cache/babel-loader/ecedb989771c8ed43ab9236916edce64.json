{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Venkat\\\\CareerConnect\\\\frontend\\\\src\\\\pages\\\\Jobs\\\\JobListingPage.js\";\n// src/pages/Jobs/JobListingPage.js\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n// Import the searchJobs function and getEstimatedSalary for salary info\nimport { searchJobs, getEstimatedSalary } from '../../services/api';\nimport './JobListingPage.css';\n\n// Inline SalaryDisplay component\nconst SalaryDisplay = ({\n  jobTitle,\n  location\n}) => {\n  const [salary, setSalary] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchSalary = async () => {\n      try {\n        const data = await getEstimatedSalary(jobTitle, location, 'ANY', 'ALL');\n        // Adjust based on your API response structure.\n        setSalary(data.estimated_salary);\n      } catch (err) {\n        console.error(\"Error fetching salary:\", err);\n        setError(\"Salary info unavailable\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchSalary();\n  }, [jobTitle, location]);\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 23\n    }\n  }, \"Loading salary...\");\n  if (error) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }, error);\n  return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 10\n    }\n  }, \"Estimated Salary: \", salary);\n};\nconst JobListingPage = () => {\n  const [jobs, setJobs] = useState([]);\n  const [filter, setFilter] = useState('');\n\n  // Fetch jobs using the searchJobs function.\n  // This function calls the JSearch endpoint and returns a response whose\n  // \"data\" key holds an array of job objects.\n  const fetchJobs = async query => {\n    try {\n      const response = await searchJobs(query, 1, 1, 'us', 'all');\n      // The API returns an object with a \"data\" key that contains the array of jobs.\n      setJobs(response.data);\n    } catch (error) {\n      console.error('Error fetching jobs:', error);\n    }\n  };\n\n  // On initial load, fetch default jobs.\n  useEffect(() => {\n    fetchJobs('developer jobs in chicago');\n  }, []);\n\n  // Filter the jobs based on job title or employer name.\n  const filteredJobs = jobs.filter(job => {\n    var _job$job_title, _job$employer_name;\n    return ((_job$job_title = job.job_title) === null || _job$job_title === void 0 ? void 0 : _job$job_title.toLowerCase().includes(filter.toLowerCase())) || ((_job$employer_name = job.employer_name) === null || _job$employer_name === void 0 ? void 0 : _job$employer_name.toLowerCase().includes(filter.toLowerCase()));\n  });\n\n  // Handle search button click.\n  const handleSearch = () => {\n    fetchJobs(filter);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"job-listing-container container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"aside\", {\n    className: \"filters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"Filters\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Search jobs...\",\n    value: filter,\n    onChange: e => setFilter(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"Search\")), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"jobs-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"jobs-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, \"Showing \", filteredJobs.length, \" results\"), /*#__PURE__*/React.createElement(\"select\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, \"Most Recent\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, \"Highest Paying\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, \"Location\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"jobs-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, filteredJobs.length > 0 ? filteredJobs.map(job => /*#__PURE__*/React.createElement(\"div\", {\n    key: job.job_id,\n    className: \"job-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, job.job_title), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, job.employer_name, \" | \", job.job_location), /*#__PURE__*/React.createElement(SalaryDisplay, {\n    jobTitle: job.job_title,\n    location: job.job_location,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: `/jobs/${job.job_id}`,\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, \"Apply Now\"))) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, \"No jobs found.\"))));\n};\nexport default JobListingPage;","map":{"version":3,"names":["React","useState","useEffect","Link","searchJobs","getEstimatedSalary","SalaryDisplay","jobTitle","location","salary","setSalary","loading","setLoading","error","setError","fetchSalary","data","estimated_salary","err","console","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","JobListingPage","jobs","setJobs","filter","setFilter","fetchJobs","query","response","filteredJobs","job","_job$job_title","_job$employer_name","job_title","toLowerCase","includes","employer_name","handleSearch","className","type","placeholder","value","onChange","e","target","onClick","length","map","key","job_id","job_location","to"],"sources":["C:/Users/Venkat/CareerConnect/frontend/src/pages/Jobs/JobListingPage.js"],"sourcesContent":["// src/pages/Jobs/JobListingPage.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n// Import the searchJobs function and getEstimatedSalary for salary info\r\nimport { searchJobs, getEstimatedSalary } from '../../services/api';\r\nimport './JobListingPage.css';\r\n\r\n// Inline SalaryDisplay component\r\nconst SalaryDisplay = ({ jobTitle, location }) => {\r\n  const [salary, setSalary] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchSalary = async () => {\r\n      try {\r\n        const data = await getEstimatedSalary(jobTitle, location, 'ANY', 'ALL');\r\n        // Adjust based on your API response structure.\r\n        setSalary(data.estimated_salary);\r\n      } catch (err) {\r\n        console.error(\"Error fetching salary:\", err);\r\n        setError(\"Salary info unavailable\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchSalary();\r\n  }, [jobTitle, location]);\r\n\r\n  if (loading) return <p>Loading salary...</p>;\r\n  if (error) return <p>{error}</p>;\r\n  return <p>Estimated Salary: {salary}</p>;\r\n};\r\n\r\nconst JobListingPage = () => {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [filter, setFilter] = useState('');\r\n\r\n  // Fetch jobs using the searchJobs function.\r\n  // This function calls the JSearch endpoint and returns a response whose\r\n  // \"data\" key holds an array of job objects.\r\n  const fetchJobs = async (query) => {\r\n    try {\r\n      const response = await searchJobs(query, 1, 1, 'us', 'all');\r\n      // The API returns an object with a \"data\" key that contains the array of jobs.\r\n      setJobs(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching jobs:', error);\r\n    }\r\n  };\r\n\r\n  // On initial load, fetch default jobs.\r\n  useEffect(() => {\r\n    fetchJobs('developer jobs in chicago');\r\n  }, []);\r\n\r\n  // Filter the jobs based on job title or employer name.\r\n  const filteredJobs = jobs.filter(\r\n    (job) =>\r\n      job.job_title?.toLowerCase().includes(filter.toLowerCase()) ||\r\n      job.employer_name?.toLowerCase().includes(filter.toLowerCase())\r\n  );\r\n\r\n  // Handle search button click.\r\n  const handleSearch = () => {\r\n    fetchJobs(filter);\r\n  };\r\n\r\n  return (\r\n    <div className=\"job-listing-container container\">\r\n      <aside className=\"filters\">\r\n        <h3>Filters</h3>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search jobs...\"\r\n          value={filter}\r\n          onChange={(e) => setFilter(e.target.value)}\r\n        />\r\n        <button onClick={handleSearch}>Search</button>\r\n      </aside>\r\n      <section className=\"jobs-section\">\r\n        <div className=\"jobs-header\">\r\n          <p>Showing {filteredJobs.length} results</p>\r\n          <select>\r\n            <option>Most Recent</option>\r\n            <option>Highest Paying</option>\r\n            <option>Location</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"jobs-grid\">\r\n          {filteredJobs.length > 0 ? (\r\n            filteredJobs.map((job) => (\r\n              <div key={job.job_id} className=\"job-card\">\r\n                <h3>{job.job_title}</h3>\r\n                <p>\r\n                  {job.employer_name} | {job.job_location}\r\n                </p>\r\n                {/* Display salary information inline */}\r\n                <SalaryDisplay\r\n                  jobTitle={job.job_title}\r\n                  location={job.job_location}\r\n                />\r\n                <Link to={`/jobs/${job.job_id}`} className=\"btn btn-primary\">\r\n                  Apply Now\r\n                </Link>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <p>No jobs found.</p>\r\n          )}\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobListingPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}