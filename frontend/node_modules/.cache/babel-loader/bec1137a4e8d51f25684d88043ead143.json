{"ast":null,"code":"import axios from 'axios';\n\n// Define base URLs and credentials\nconst AUTH_URL = 'http://localhost:5000/api/auth';\nconst API_BASE_URL = 'http://localhost:5000/api';\nconst REMOTIVE_URL = 'https://remotive.io/api/remote-jobs';\n\n// LinkedIn Data API configuration\nconst LINKEDIN_API_BASE_URL = 'https://linkedin-data-api.p.rapidapi.com';\nconst LINKEDIN_API_HOST = 'linkedin-data-api.p.rapidapi.com';\nconst RAPIDAPI_KEY = 'b9fa4a9482msh0051404b674a43fp1398fajsn5decfeb2d616';\n\n// --- Authentication & Profile Functions ---\nexport const registerUser = async userData => {\n  try {\n    const response = await axios.post(`${AUTH_URL}/register`, userData);\n    return response.data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};\nexport const loginUser = async userData => {\n  try {\n    const response = await axios.post(`${AUTH_URL}/login`, userData);\n    return response.data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};\nexport const getUserProfile = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/profile`, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching profile:', error);\n    throw error;\n  }\n};\nexport const updateUserProfile = async formData => {\n  try {\n    const response = await axios.put(`${API_BASE_URL}/profile`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error updating profile:', error);\n    throw error;\n  }\n};\n\n// --- Remote Jobs Function (Remotive) ---\nexport const getRemoteJobs = async () => {\n  try {\n    const response = await axios.get(REMOTIVE_URL);\n    return response.data.jobs;\n  } catch (error) {\n    console.error('Error fetching remote jobs:', error);\n    throw error;\n  }\n};\n\n// --- LinkedIn Data API Function ---\nexport const getLinkedInJobDetails = async jobId => {\n  try {\n    const response = await axios.get(`${LINKEDIN_API_BASE_URL}/get-job-details`, {\n      params: {\n        id: jobId\n      },\n      headers: {\n        'x-rapidapi-key': RAPIDAPI_KEY,\n        'x-rapidapi-host': LINKEDIN_API_HOST\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching job details from LinkedIn:', error);\n    throw error;\n  }\n};\n\n// --- Proxy Function to Call Backend ---\nexport const getJobDetailsFromBackend = async jobId => {\n  const response = await axios.get(`http://localhost:5000/api/rapid/jobdetails`, {\n    params: {\n      jobId\n    }\n  });\n  return response.data;\n};","map":{"version":3,"names":["axios","AUTH_URL","API_BASE_URL","REMOTIVE_URL","LINKEDIN_API_BASE_URL","LINKEDIN_API_HOST","RAPIDAPI_KEY","registerUser","userData","response","post","data","error","loginUser","getUserProfile","get","headers","Authorization","localStorage","getItem","console","updateUserProfile","formData","put","getRemoteJobs","jobs","getLinkedInJobDetails","jobId","params","id","getJobDetailsFromBackend"],"sources":["C:/Users/Venkat/CareerConnect/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Define base URLs and credentials\r\nconst AUTH_URL = 'http://localhost:5000/api/auth';\r\nconst API_BASE_URL = 'http://localhost:5000/api';\r\nconst REMOTIVE_URL = 'https://remotive.io/api/remote-jobs';\r\n\r\n// LinkedIn Data API configuration\r\nconst LINKEDIN_API_BASE_URL = 'https://linkedin-data-api.p.rapidapi.com';\r\nconst LINKEDIN_API_HOST = 'linkedin-data-api.p.rapidapi.com';\r\nconst RAPIDAPI_KEY = 'b9fa4a9482msh0051404b674a43fp1398fajsn5decfeb2d616';\r\n\r\n// --- Authentication & Profile Functions ---\r\nexport const registerUser = async (userData) => {\r\n  try {\r\n    const response = await axios.post(`${AUTH_URL}/register`, userData);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response.data;\r\n  }\r\n};\r\n\r\nexport const loginUser = async (userData) => {\r\n  try {\r\n    const response = await axios.post(`${AUTH_URL}/login`, userData);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response.data;\r\n  }\r\n};\r\n\r\nexport const getUserProfile = async () => {\r\n  try {\r\n    const response = await axios.get(`${API_BASE_URL}/profile`, {\r\n      headers: { Authorization: `Bearer ${localStorage.getItem('token')}` },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching profile:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updateUserProfile = async (formData) => {\r\n  try {\r\n    const response = await axios.put(`${API_BASE_URL}/profile`, formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n        Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error updating profile:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// --- Remote Jobs Function (Remotive) ---\r\nexport const getRemoteJobs = async () => {\r\n  try {\r\n    const response = await axios.get(REMOTIVE_URL);\r\n    return response.data.jobs;\r\n  } catch (error) {\r\n    console.error('Error fetching remote jobs:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// --- LinkedIn Data API Function ---\r\nexport const getLinkedInJobDetails = async (jobId) => {\r\n  try {\r\n    const response = await axios.get(`${LINKEDIN_API_BASE_URL}/get-job-details`, {\r\n      params: { id: jobId },\r\n      headers: {\r\n        'x-rapidapi-key': RAPIDAPI_KEY,\r\n        'x-rapidapi-host': LINKEDIN_API_HOST,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching job details from LinkedIn:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// --- Proxy Function to Call Backend ---\r\nexport const getJobDetailsFromBackend = async (jobId) => {\r\n  const response = await axios.get(`http://localhost:5000/api/rapid/jobdetails`, {\r\n    params: { jobId }\r\n  });\r\n  return response.data;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}