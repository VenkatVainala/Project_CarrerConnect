{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Venkat\\\\CareerConnect\\\\frontend\\\\src\\\\pages\\\\Jobs\\\\JobListingPage.js\";\n// frontend/src/pages/Jobs/JobListingPage.jsx\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport './JobListingPage.css';\nconst JobListingPage = () => {\n  const [jobs, setJobs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [filter, setFilter] = useState('');\n  useEffect(() => {\n    const fetchJobs = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/jobs');\n        if (response.data.success) {\n          setJobs(response.data.data);\n        } else {\n          setError('Failed to fetch jobs');\n        }\n      } catch (err) {\n        console.error('Error fetching jobs:', err);\n        setError('Error fetching jobs');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchJobs();\n  }, []);\n  const filteredJobs = jobs.filter(job => job.title.toLowerCase().includes(filter.toLowerCase()) || job.company.name.toLowerCase().includes(filter.toLowerCase()));\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 23\n    }\n  }, \"Loading jobs...\");\n  if (error) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, error);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"job-listing-page container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \"Job Listings\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Search by title or company...\",\n    value: filter,\n    onChange: e => setFilter(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"jobs-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, filteredJobs.length > 0 ? filteredJobs.map(job => /*#__PURE__*/React.createElement(\"div\", {\n    key: job.id,\n    className: \"job-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"job-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, job.company.logo && /*#__PURE__*/React.createElement(\"img\", {\n    src: job.company.logo,\n    alt: job.company.name,\n    className: \"company-logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, job.title)), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"company\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, job.company.name, \" | \", job.location), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, job.description.slice(0, 150), \"...\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: job.applyMethod.companyApplyUrl,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, \"Apply Now\"))) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, \"No jobs found.\")));\n};\nexport default JobListingPage;","map":{"version":3,"names":["React","useState","useEffect","axios","Link","JobListingPage","jobs","setJobs","loading","setLoading","error","setError","filter","setFilter","fetchJobs","response","get","data","success","err","console","filteredJobs","job","title","toLowerCase","includes","company","name","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","type","placeholder","value","onChange","e","target","length","map","key","id","logo","src","alt","location","description","slice","href","applyMethod","companyApplyUrl","rel"],"sources":["C:/Users/Venkat/CareerConnect/frontend/src/pages/Jobs/JobListingPage.js"],"sourcesContent":["// frontend/src/pages/Jobs/JobListingPage.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport './JobListingPage.css';\r\n\r\nconst JobListingPage = () => {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [filter, setFilter] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchJobs = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/jobs');\r\n        if (response.data.success) {\r\n          setJobs(response.data.data);\r\n        } else {\r\n          setError('Failed to fetch jobs');\r\n        }\r\n      } catch (err) {\r\n        console.error('Error fetching jobs:', err);\r\n        setError('Error fetching jobs');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchJobs();\r\n  }, []);\r\n\r\n  const filteredJobs = jobs.filter(\r\n    (job) =>\r\n      job.title.toLowerCase().includes(filter.toLowerCase()) ||\r\n      job.company.name.toLowerCase().includes(filter.toLowerCase())\r\n  );\r\n\r\n  if (loading) return <p>Loading jobs...</p>;\r\n  if (error) return <p>{error}</p>;\r\n\r\n  return (\r\n    <div className=\"job-listing-page container\">\r\n      <h1>Job Listings</h1>\r\n      <div className=\"filters\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search by title or company...\"\r\n          value={filter}\r\n          onChange={(e) => setFilter(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"jobs-grid\">\r\n        {filteredJobs.length > 0 ? (\r\n          filteredJobs.map((job) => (\r\n            <div key={job.id} className=\"job-card\">\r\n              <div className=\"job-header\">\r\n                {job.company.logo && (\r\n                  <img\r\n                    src={job.company.logo}\r\n                    alt={job.company.name}\r\n                    className=\"company-logo\"\r\n                  />\r\n                )}\r\n                <h2>{job.title}</h2>\r\n              </div>\r\n              <p className=\"company\">\r\n                {job.company.name} | {job.location}\r\n              </p>\r\n              <p className=\"description\">\r\n                {job.description.slice(0, 150)}...\r\n              </p>\r\n              <a\r\n                href={job.applyMethod.companyApplyUrl}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                className=\"btn btn-primary\"\r\n              >\r\n                Apply Now\r\n              </a>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p>No jobs found.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobListingPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}