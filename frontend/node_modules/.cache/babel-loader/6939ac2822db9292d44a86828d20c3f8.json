{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Venkat\\\\CareerConnect\\\\frontend\\\\src\\\\pages\\\\Jobs\\\\JobListingPage.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getLinkedInJobDetails } from '../../services/api';\nimport './JobListingPage.css';\n\n// JobCard component: fetches and displays job details for a given job ID.\nconst JobCard = ({\n  jobId\n}) => {\n  var _job$company, _job$company2, _job$applyMethod;\n  const [job, setJob] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchJobDetails = async () => {\n      try {\n        const response = await getLinkedInJobDetails(jobId);\n        // Assuming the API response structure:\n        // { success: true, message: \"\", data: { ...jobDetails } }\n        if (response && response.success) {\n          setJob(response.data);\n        } else {\n          setError('No job data available');\n        }\n      } catch (err) {\n        console.error('Error fetching job details:', err);\n        setError('Unable to load job details');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchJobDetails();\n  }, [jobId]);\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 23\n    }\n  }, \"Loading job details...\");\n  if (error) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, error);\n  if (!job) return null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"job-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"job-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, ((_job$company = job.company) === null || _job$company === void 0 ? void 0 : _job$company.logo) && /*#__PURE__*/React.createElement(\"img\", {\n    src: job.company.logo,\n    alt: job.company.name,\n    className: \"company-logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, job.title)), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"company\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, (_job$company2 = job.company) === null || _job$company2 === void 0 ? void 0 : _job$company2.name, \" | \", job.location), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, job.description ? job.description.slice(0, 150) + '...' : 'No description available.'), /*#__PURE__*/React.createElement(\"a\", {\n    href: ((_job$applyMethod = job.applyMethod) === null || _job$applyMethod === void 0 ? void 0 : _job$applyMethod.companyApplyUrl) || job.url,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, \"Apply Now\"));\n};\nconst JobListingPage = () => {\n  // For demonstration, we're using a static list of job IDs.\n  // In a real application, you might fetch these from another endpoint or search results.\n  const [jobIds, setJobIds] = useState(['4090994054', '4090994054', '4090994054']);\n  const [filter, setFilter] = useState('');\n\n  // Optional: You can implement filtering logic to update jobIds based on the filter.\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"job-listing-container container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"aside\", {\n    className: \"filters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, \"Filters\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Search jobs...\",\n    value: filter,\n    onChange: e => setFilter(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, \"Search\")), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"jobs-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"jobs-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, \"Showing \", jobIds.length, \" results\"), /*#__PURE__*/React.createElement(\"select\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, \"Most Recent\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, \"Highest Paying\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, \"Location\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"jobs-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, jobIds.length > 0 ? jobIds.map((id, index) => /*#__PURE__*/React.createElement(JobCard, {\n    key: index,\n    jobId: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 39\n    }\n  })) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, \"No jobs found.\"))));\n};\nexport default JobListingPage;","map":{"version":3,"names":["React","useState","useEffect","Link","getLinkedInJobDetails","JobCard","jobId","_job$company","_job$company2","_job$applyMethod","job","setJob","loading","setLoading","error","setError","fetchJobDetails","response","success","data","err","console","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","company","logo","src","alt","name","title","location","description","slice","href","applyMethod","companyApplyUrl","url","target","rel","JobListingPage","jobIds","setJobIds","filter","setFilter","type","placeholder","value","onChange","e","length","map","id","index","key"],"sources":["C:/Users/Venkat/CareerConnect/frontend/src/pages/Jobs/JobListingPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { getLinkedInJobDetails } from '../../services/api';\r\nimport './JobListingPage.css';\r\n\r\n// JobCard component: fetches and displays job details for a given job ID.\r\nconst JobCard = ({ jobId }) => {\r\n  const [job, setJob] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchJobDetails = async () => {\r\n      try {\r\n        const response = await getLinkedInJobDetails(jobId);\r\n        // Assuming the API response structure:\r\n        // { success: true, message: \"\", data: { ...jobDetails } }\r\n        if (response && response.success) {\r\n          setJob(response.data);\r\n        } else {\r\n          setError('No job data available');\r\n        }\r\n      } catch (err) {\r\n        console.error('Error fetching job details:', err);\r\n        setError('Unable to load job details');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchJobDetails();\r\n  }, [jobId]);\r\n\r\n  if (loading) return <p>Loading job details...</p>;\r\n  if (error) return <p>{error}</p>;\r\n  if (!job) return null;\r\n\r\n  return (\r\n    <div className=\"job-card\">\r\n      <div className=\"job-header\">\r\n        {job.company?.logo && (\r\n          <img\r\n            src={job.company.logo}\r\n            alt={job.company.name}\r\n            className=\"company-logo\"\r\n          />\r\n        )}\r\n        <h3>{job.title}</h3>\r\n      </div>\r\n      <p className=\"company\">\r\n        {job.company?.name} | {job.location}\r\n      </p>\r\n      <p className=\"description\">\r\n        {job.description ? job.description.slice(0, 150) + '...' : 'No description available.'}\r\n      </p>\r\n      <a\r\n        href={job.applyMethod?.companyApplyUrl || job.url}\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n        className=\"btn btn-primary\"\r\n      >\r\n        Apply Now\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst JobListingPage = () => {\r\n  // For demonstration, we're using a static list of job IDs.\r\n  // In a real application, you might fetch these from another endpoint or search results.\r\n  const [jobIds, setJobIds] = useState(['4090994054', '4090994054', '4090994054']);\r\n  const [filter, setFilter] = useState('');\r\n\r\n  // Optional: You can implement filtering logic to update jobIds based on the filter.\r\n\r\n  return (\r\n    <div className=\"job-listing-container container\">\r\n      <aside className=\"filters\">\r\n        <h3>Filters</h3>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search jobs...\"\r\n          value={filter}\r\n          onChange={(e) => setFilter(e.target.value)}\r\n        />\r\n        {/* Add search functionality here as needed */}\r\n        <button>Search</button>\r\n      </aside>\r\n      <section className=\"jobs-section\">\r\n        <div className=\"jobs-header\">\r\n          <p>Showing {jobIds.length} results</p>\r\n          <select>\r\n            <option>Most Recent</option>\r\n            <option>Highest Paying</option>\r\n            <option>Location</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"jobs-grid\">\r\n          {jobIds.length > 0 ? (\r\n            jobIds.map((id, index) => <JobCard key={index} jobId={id} />)\r\n          ) : (\r\n            <p>No jobs found.</p>\r\n          )}\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobListingPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}