{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Venkat\\\\CareerConnect\\\\frontend\\\\src\\\\pages\\\\Jobs\\\\JobListingPage.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getLinkedInJobDetails } from '../../services/api';\nimport './JobListingPage.css';\n\n// Dedicated JobCard component that uses the getLinkedInJobDetails function\nconst JobCard = ({\n  jobId\n}) => {\n  const [job, setJob] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchJobDetails = async () => {\n      try {\n        const data = await getLinkedInJobDetails(jobId);\n        setJob(data);\n      } catch (err) {\n        console.error('Error fetching job details:', err);\n        setError('Unable to load job details');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchJobDetails();\n  }, [jobId]);\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 23\n    }\n  }, \"Loading job details...\");\n  if (error) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }, error);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"job-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"job-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, job.employer_logo && /*#__PURE__*/React.createElement(\"img\", {\n    src: job.employer_logo,\n    alt: job.employer_name,\n    className: \"employer-logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, job.job_title)), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"company\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, job.employer_name, \" | \", job.location), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, job.job_description ? job.job_description.slice(0, 150) + '...' : 'No description available.'), /*#__PURE__*/React.createElement(Link, {\n    to: `/jobs/${jobId}`,\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"Apply Now\"));\n};\nconst JobListingPage = () => {\n  // For demonstration, use an array of job IDs.\n  const [jobIds, setJobIds] = useState(['4090994054', '4090994054', '4090994054']);\n  const [filter, setFilter] = useState('');\n\n  // Optionally, add search functionality to update jobIds based on user input.\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"job-listing-container container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"aside\", {\n    className: \"filters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \"Filters\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Search jobs...\",\n    value: filter,\n    onChange: e => setFilter(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"Search\")), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"jobs-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"jobs-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, \"Showing \", jobIds.length, \" results\"), /*#__PURE__*/React.createElement(\"select\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, \"Most Recent\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, \"Highest Paying\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, \"Location\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"jobs-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, jobIds.length > 0 ? jobIds.map(id => /*#__PURE__*/React.createElement(JobCard, {\n    key: id,\n    jobId: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 32\n    }\n  })) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, \"No jobs found.\"))));\n};\nexport default JobListingPage;","map":{"version":3,"names":["React","useState","useEffect","Link","getLinkedInJobDetails","JobCard","jobId","job","setJob","loading","setLoading","error","setError","fetchJobDetails","data","err","console","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","employer_logo","src","alt","employer_name","job_title","location","job_description","slice","to","JobListingPage","jobIds","setJobIds","filter","setFilter","type","placeholder","value","onChange","e","target","length","map","id","key"],"sources":["C:/Users/Venkat/CareerConnect/frontend/src/pages/Jobs/JobListingPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { getLinkedInJobDetails } from '../../services/api';\r\nimport './JobListingPage.css';\r\n\r\n// Dedicated JobCard component that uses the getLinkedInJobDetails function\r\nconst JobCard = ({ jobId }) => {\r\n  const [job, setJob] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchJobDetails = async () => {\r\n      try {\r\n        const data = await getLinkedInJobDetails(jobId);\r\n        setJob(data);\r\n      } catch (err) {\r\n        console.error('Error fetching job details:', err);\r\n        setError('Unable to load job details');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchJobDetails();\r\n  }, [jobId]);\r\n\r\n  if (loading) return <p>Loading job details...</p>;\r\n  if (error) return <p>{error}</p>;\r\n\r\n  return (\r\n    <div className=\"job-card\">\r\n      <div className=\"job-header\">\r\n        {job.employer_logo && (\r\n          <img src={job.employer_logo} alt={job.employer_name} className=\"employer-logo\" />\r\n        )}\r\n        <h3>{job.job_title}</h3>\r\n      </div>\r\n      <p className=\"company\">\r\n        {job.employer_name} | {job.location}\r\n      </p>\r\n      <p className=\"description\">\r\n        {job.job_description\r\n          ? job.job_description.slice(0, 150) + '...'\r\n          : 'No description available.'}\r\n      </p>\r\n      <Link to={`/jobs/${jobId}`} className=\"btn btn-primary\">\r\n        Apply Now\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst JobListingPage = () => {\r\n  // For demonstration, use an array of job IDs.\r\n  const [jobIds, setJobIds] = useState(['4090994054', '4090994054', '4090994054']);\r\n  const [filter, setFilter] = useState('');\r\n\r\n  // Optionally, add search functionality to update jobIds based on user input.\r\n\r\n  return (\r\n    <div className=\"job-listing-container container\">\r\n      <aside className=\"filters\">\r\n        <h3>Filters</h3>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search jobs...\"\r\n          value={filter}\r\n          onChange={(e) => setFilter(e.target.value)}\r\n        />\r\n        {/* You can add search logic to update jobIds if needed */}\r\n        <button>Search</button>\r\n      </aside>\r\n      <section className=\"jobs-section\">\r\n        <div className=\"jobs-header\">\r\n          <p>Showing {jobIds.length} results</p>\r\n          <select>\r\n            <option>Most Recent</option>\r\n            <option>Highest Paying</option>\r\n            <option>Location</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"jobs-grid\">\r\n          {jobIds.length > 0 ? (\r\n            jobIds.map((id) => <JobCard key={id} jobId={id} />)\r\n          ) : (\r\n            <p>No jobs found.</p>\r\n          )}\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobListingPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}